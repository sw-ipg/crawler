version: '3'
services:
  zookeeper:
    image: zookeeper:3.5.9
    volumes:
      - './.docker/zookeeper-data:/var/lib/zookeeper/data'
  kafka:
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENERS: 'INTERNAL://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'INTERNAL:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_CREATE_TOPICS: 'urls:1:1,docs:1:1'
      KAFKA_ADVERTISED_HOST_NAME: host.docker.internal
    image: 'wurstmeister/kafka:2.13-2.8.1'
    volumes:
      - '.docker/kafka-data:/kafka'
  kafka-connect:
    depends_on:
      - kafka
    links:
      - kafka
    image: 'wurstmeister/kafka:2.13-2.8.1'
    volumes:
      - '.docker/kafka-connect-data:/kafka'
      - '.docker/docs:/var/crawler/docs'
      - '.docker/kafka-connect-libs:/var/lib/kafka/connectors'
      - '.docker/kafka-connect-properties:/var/lib/kafka/connectors/config'
    command: /opt/kafka/bin/connect-standalone.sh /var/lib/kafka/connectors/config/connect-standalone.properties /var/lib/kafka/connectors/config/CamelFileSinkConnector.properties
  postgres:
    image: postgres
    environment:
      POSTGRES_USER: 'crawler'
      POSTGRES_PASSWORD: 'awesomePassword'
      POSTGRES_DB: 'crawler'
    volumes:
      - '.docker/postgresql-data:/var/lib/postgresql/data'
  crawler:
    build: .
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - '8080-8082:8083'
    depends_on:
      - kafka
      - postgres
    links:
      - kafka
      - postgres
